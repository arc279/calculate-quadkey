import pytest

from quadkey import Quadkey

@pytest.mark.parametrize(
    "offset, expect", [
        ( (0,  0), '1010' ),
        ( (0,  1), '1012' ),
        ( (0,  2), '1030' ),
        ( (0,  3), '1032' ),
        ( (0,  4), '1210' ),
        ( (0,  5), '1212' ),
        ( (0,  6), '1230' ),
        ( (0,  7), '1232' ),
        ( (0,  8), '3010' ),
        ( (0,  9), '3012' ),
        ( (0, 10), '3030' ),
        ( (0, 11), '3032' ),
        ( (0, 12), '3210' ),
        ( (0, 13), '3212' ),
        ( (0, 14), '3230' ),
        ( (0, 15), '3232' ),
    ]
)
def test_vertical(offset, expect):
    """level 4 縦一周"""
    q = Quadkey("1010")
    assert expect == q.offset(*offset)

@pytest.mark.parametrize(
    "offset, expect", [
        ( ( 0, 0), '0200' ),
        ( ( 1, 0), '0201' ),
        ( ( 2, 0), '0210' ),
        ( ( 3, 0), '0211' ),
        ( ( 4, 0), '0300' ),
        ( ( 5, 0), '0301' ),
        ( ( 6, 0), '0310' ),
        ( ( 7, 0), '0311' ),
        ( ( 8, 0), '1200' ),
        ( ( 9, 0), '1201' ),
        ( (10, 0), '1210' ),
        ( (11, 0), '1211' ),
        ( (12, 0), '1300' ),
        ( (13, 0), '1301' ),
        ( (14, 0), '1310' ),
        ( (15, 0), '1311' ),
    ]
)
def test_horizontal(offset, expect):
    """level 4 横一周"""
    q = Quadkey("0200")
    assert expect == q.offset(*offset)


@pytest.mark.parametrize(
    "offset, expect", [
        ( (-1, -1), '13300211230133100202' ),
        ( ( 0, -1), '13300211230133100203' ),
        ( ( 1, -1), '13300211230133100212' ),
        ( (-1,  0), '13300211230133100220' ),
        ( ( 0,  0), '13300211230133100221' ),
        ( ( 1,  0), '13300211230133100230' ),
        ( (-1,  1), '13300211230133100222' ),
        ( ( 0,  1), '13300211230133100223' ),
        ( ( 1,  1), '13300211230133100232' ),
    ]
)
def test_neighbor9(offset, expect):
    """level 20 隣接9マス"""
    q = Quadkey("13300211230133100221")
    assert expect == q.offset(*offset)

